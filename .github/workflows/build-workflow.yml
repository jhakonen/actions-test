name: Build the plugin on push or PR

on:
- push
- pull_request

env:
  QT_VERSION: 5.12.3

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    steps:
    # Install and cache Qt
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ env.QT_VERSION }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: ${{ env.QT_VERSION }}
        host: linux

    # Checkout sources and get plugin version string from latest tag
    - uses: actions/checkout@v2
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get previous git tag
      id: previoustag
      uses: actions/github-action-get-previous-tag@master # WyriHaximus/github-action-get-previous-tag@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: Parse version string
      id: version
      uses: frabert/replace-string-action@v1.1
      with:
        pattern: v([.0-9]+)
        string: ${{ steps.previoustag.outputs.tag }}
        replace-with: $1

    # Build the plugin
    - name: qmake
      run: qmake "PLUGIN_VERSION = $PLUGIN_VERSION"
      env:
        PLUGIN_VERSION: ${{ steps.version.outputs.replaced }}
    - name: make
      run: make package

    # Upload plugin files for releasing
    - name: Upload plugin installer artifact
      uses: actions/upload-artifact@v1
      with:
        name: ubuntu-plugin
        path: tessumod_plugin_${{ steps.version.outputs.replaced }}_linux_amd64.ts3_plugin
    - name: Upload debugging symbols
      uses: actions/upload-artifact@v1
      with:
        name: ubuntu-dbgsymbols
        path: tessumod_plugin_${{ steps.version.outputs.replaced }}_linux_amd64_dbg.zip

  build-windows:
    runs-on: windows-latest
    steps:
    # Install and cache Qt
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1
      with:
        path: ../Qt
        key: ${{ runner.os }}-${{ env.QT_VERSION }}-QtCache
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: ${{ env.QT_VERSION }}
        host: windows
        arch: win64_msvc2015_64

    - name: Install Visual Studio 2015 build tools
      run: choco install -y visualcppbuildtools

    # Checkout sources and get plugin version string from latest tag
    - uses: actions/checkout@v2
    - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get previous git tag
      id: previoustag
      uses: actions/github-action-get-previous-tag@master # WyriHaximus/github-action-get-previous-tag@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: Parse version string
      id: version
      uses: frabert/replace-string-action@v1.1
      with:
        pattern: v([.0-9]+)
        string: ${{ steps.previoustag.outputs.tag }}
        replace-with: $1

    # Build the plugin
    - name: Build package
      shell: cmd
      run: |
        rem Get rid of Windows Driver Kit as vcvarsall.bat would use that instead of Windows 10 SDK
        rem For more info see: https://stackoverflow.com/a/32897691 
        rmdir /s /q "C:\Program Files (x86)\Windows Kits\10\include\wdf"

        call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" amd64

        rem Add a directory with rc.exe to PATH
        set PATH=%PATH%;c:\Program Files (x86)\Windows Kits\8.1\bin\x64

        qmake "PLUGIN_VERSION = %PLUGIN_VERSION%"
        nmake package
      env:
        PLUGIN_VERSION: ${{ steps.version.outputs.replaced }}

    # Upload plugin files for releasing
    - name: Upload plugin installer artifact
      uses: actions/upload-artifact@v1
      with:
        name: windows-plugin
        path: tessumod_plugin_${{ steps.version.outputs.replaced }}_win64.ts3_plugin
    - name: Upload debugging symbols
      uses: actions/upload-artifact@v1
      with:
        name: windows-dbgsymbols
        path: tessumod_plugin_${{ steps.version.outputs.replaced }}_win64_dbg.zip
