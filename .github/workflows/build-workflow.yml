name: Build the plugin on push or PR

on:
- push
- pull_request

env:
  QT_VERSION: 5.12.3

jobs:
  build:
    strategy:
      matrix:
        config:
          - os: ubuntu
            arch: null
            build-cmd: .github/workflows/build-ubuntu.sh
          # - os: windows
          #   arch: win64_msvc2015_64
          #   build-cmd: .github\workflows\build-windows.cmd

    runs-on: ${{ matrix.config.os }}-latest

    steps:
    # # Install and cache Qt
    # - name: Cache Qt
    #   id: cache-qt
    #   uses: actions/cache@v1
    #   with:
    #     path: ../Qt
    #     key: ${{ matrix.config.os }}-${{ env.QT_VERSION }}-QtCache
    # - name: Install Qt
    #   uses: jurplel/install-qt-action@v2
    #   with:
    #     cached: ${{ steps.cache-qt.outputs.cache-hit }}
    #     version: ${{ env.QT_VERSION }}
    #     arch: ${{ matrix.config.arch }}

    # Checkout sources and get plugin version string from latest tag
    - uses: actions/checkout@v2
    - name: Fetch all tags
      run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
    - name: Get previous git tag
      id: previoustag
      uses: ./.github/actions/github-action-get-previous-tag # WyriHaximus/github-action-get-previous-tag@master
      env:
        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    - name: Parse version string
      id: version
      uses: frabert/replace-string-action@v1.1
      with:
        pattern: v([.0-9]+)
        string: ${{ steps.previoustag.outputs.tag }}
        replace-with: $1
    - name: Resolve Docker tag name
      shell: bash
      run: |
        VERSION=${GITHUB_REF//[^0-9a-zA-Z]/-}
        VERSION=${VERSION,,}
        echo "::set-output name=name::docker.pkg.github.com/${{ github.repository }}/${{ matrix.config.os }}:$VERSION"
      id: docker-tag
    - name: Build Docker image
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | \
          docker login docker.pkg.github.com -u ${{ github.repository_owner }} --password-stdin
        docker pull ${{ steps.docker-tag.outputs.name }}
        docker build docker/${{ matrix.config.os }} -t ${{ steps.docker-tag.outputs.name }}
        docker push ${{ steps.docker-tag.outputs.name }}

    # # Setup Windows build environment
    # - name: Install Visual Studio 2015 build tools (Windows)
    #   run: choco install -y visualcppbuildtools
    #   if: ${{ matrix.config.os == 'windows' }}

    - name: Build plugin package
      id: package
      run: |
        docker run \
          --rm \
          --volume ${PWD}:/build \
          ${{ steps.docker-tag.outputs.name }} \
          ${{ steps.version.outputs.replaced }}

    # Upload plugin files for releasing
    - name: Upload plugin installer artifact
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.config.os }}-plugin
        path: ${{ steps.package.outputs.plugin-artifact }}
    - name: Upload debugging symbols
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.config.os }}-dbgsymbols
        path: ${{ steps.package.outputs.debugsymbols-artifact }}
